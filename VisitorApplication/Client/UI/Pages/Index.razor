@page "/{informationboardID:int}"
@using VisitorApplication.Shared
@inject HttpClient Http

<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.0/font/bootstrap-icons.css">
</head>


@if (AllInformationboards == null)
{
    <h1 class="display-5 m-1" style="color: white;">Loading...</h1>
}
else
{
    foreach (var informationboard in AllInformationboards)
    {
        // Displays the published information board, if any at the specific path
        if (informationboardID == informationboard.InformationboardID && informationboard.IsPublished == true)
        {
            <head>
                <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.0/font/bootstrap-icons.css">
            </head>

            <section class="col-12">
                @if (@informationboard.Title.Length > 15)
                {
                    <p class="text-white display-5 text-center fw-bold mt-2">
                        @informationboard.Title
                    </p>
                }
                else
                {
                    <p class="text-white display-2 text-center fw-bold mt-2 mb-1">
                        @informationboard.Title
                    </p>
                }
                <!-- Linje under overskrift -->
                <div class="col-5 mx-auto mt-0 mb-1 border-1 border-bottom"></div>
                <p class="creyTitle text-center mt-0 text-wrap">En digital informationstavle</p>
            </section>

            <section class="wrapper container">
                <div id="categories" class="row justify-content-center text-center">
                    @* The categories are not yet loaded from the database*@
                    @if (AllCategories == null)
                    {
                    }
                    @*The order of the categories has not been altered*@
                    @*This ifelse-statement diplays the categories on the ../{informationboardID} page IF the categoryOrder is empty in the database*@
                    else if (informationboard.CategoryOrder == string.Empty)
                    {
                        foreach (var category in SelectedCategoriesList)
                        {
                            <a class="btn square col-5 m-1 p-1 d-flex align-items-center text-white shadow-lg rounded-3" href="@($"/{informationboard.InformationboardID}/{category.CategoryId}")">
                                <div class="mx-auto">
                                    <i class="@category.Icon"></i>
                                    @if (category.Title.Length > 11)
                                    {
                                        <p class="creyTitle fs-6 text-break">@category.Title</p>
                                    }
                                    else
                                    {
                                        <p class="creyTitle fs-4 text-break">@category.Title</p>
                                    }
                                </div>
                            </a>
                        }
                    }
                    @*The order of the categories has been altered*@
                    @*This else-statement diplays the categories on the ../{informationboardID} page*@
                    else
                    {
                        foreach (var id in CategoryOrder)
                        {
                            <a class="btn square col-5 m-1 p-1 d-flex align-items-center text-white shadow-lg rounded-3" href="@($"/{informationboard.InformationboardID}/{CategoryDictionary[id].CategoryId}")">
                                <div class="mx-auto">
                                    <i class="@CategoryDictionary[id].Icon"></i>
                                    @if (CategoryDictionary[id].Title.Length > 11)
                                    {
                                        <p class="creyTitle fs-6 text-break">@CategoryDictionary[id].Title</p>
                                    }
                                    else
                                    {
                                        <p class="creyTitle fs-4 text-break">@CategoryDictionary[id].Title</p>
                                    }
                                </div>
                            </a>
                        }
                    }
                </div>
            </section>

            <section class="font-monospace text-center mt-2">
                <p class="fw-light fs-6 text-muted">© talDigital 2021</p>
            </section>
        }

        @*Displays message if the selected information board is not publised OR if the selected information board has no categories*@
if ((informationboardID == informationboard.InformationboardID && informationboard.IsPublished != true) || (informationboardID == informationboard.InformationboardID && SelectedCategoriesList.Count == 0))
{
            <h1 class="col-10 text-center display-1 ms-0" style="color: white;">Der er ikke noget på denne side.</h1>

        }
    }
}

@code
{
    [Parameter]
    public int informationboardID { get; set; }
    [Parameter]
    public int categoryID { get; set; }

    Informationboard[] AllInformationboards { get; set; }
    Category[] AllCategories { get; set; }
    Dictionary<int, Category> CategoryDictionary { get; set; } = new Dictionary<int, Category>();
    List<int> CategoryOrder { get; set; } = new();
    List<Category> SelectedCategoriesList { get; set; } = new();

    protected async override Task OnInitializedAsync()
    {
        AllInformationboards = await Http.GetFromJsonAsync<Informationboard[]>("api/Informationboard/InformationboardList");
        AllCategories = await Http.GetFromJsonAsync<Category[]>("api/Category/CategoryList");
        SelectedCategoriesList = AllCategories.Where(x => x.InformationBoardId == informationboardID).Select(x => x).ToList();
        CategoriesToDictionary();

        var selectedInformationBoard = AllInformationboards.Where(x => x.InformationboardID == informationboardID).Select(x => x).First();
        CategoryOrder = SplitCategoriesToList(selectedInformationBoard);
    }

    public void CategoriesToDictionary()
    {
        foreach (var category in SelectedCategoriesList)
        {
            CategoryDictionary.Add(category.CategoryId, category);
        }
    }

    public List<int> SplitCategoriesToList(Informationboard informationboard)
    {
        List<string> stringIDList = informationboard.CategoryOrder.Split(",").ToList();
        List<int> intIDList = new();

        foreach (string item in stringIDList)
        {

            try
            {
                intIDList.Add(Convert.ToInt32(item));
            }
            catch (FormatException)
            {
            }
        }

        return intIDList;
    }
}
