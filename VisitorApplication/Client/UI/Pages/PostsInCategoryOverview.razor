<!-- Route to page is the id of the infoboard slash id of category-->
@page "/{informationboardID:int}/{categoryID:int}"

@using VisitorApplication.Shared
@inject HttpClient Http

<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.0/font/bootstrap-icons.css">
</head>

@if (postList == null)
{
    //should be here as it might take some time to fetch data from the database  
}
else
{
    @foreach (var category in categoryList)
    {
        if (categoryID == category.CategoryId)
        {
            <!-- Category Title -->
            <section class="text-white">
                <div class="wrapper container mt-1">
                    <a class="btn float-start" href="@($"/{category.InformationBoardId}")"><i class="bi bi-arrow-left-square" style="font-size: 7.5vw; color: white;"></i></a>
                    <!--ensure that category title will not go outside the box-->
                    @if (category.Title.Length > 11)
                    {
                    <h1 class="titleGreen mx-auto display-3 fw-bold mt-2 text-break">@category.Title</h1>
                    }
                    else
                    {
                    <h1 class="titleGreen mx-auto display-1 fw-bold mt-2 text-break">@category.Title</h1>
                    }
                </div>
            </section>
        }
    }
}

<section class="row col-12 mx-auto">
    @if (postList == null)
    {
        
    }
    else
    {
        @foreach (var post in postList.OrderByDescending(x => x.PostID))
        {
            if (categoryID == post.CategoryID && post.IsPublished == true)
            {
                <a class="card mt-2 p-1 text-white text-decoration-none bg-white bg-opacity-25 rounded-2" type="submit" href="@($"/{informationboardID}/{categoryID}/{post.PostID}")">
                    <div class="card-body">
                        <h1 class="card-title">@post.Title</h1>
                        <p class="card-text">
                            @if (@post.Text.Length > 120)
                            {
                                @post.Text.Substring(0, 120);
                                <span>...</span>
                            }
                            else
                            {
                                @post.Text
                            }
                        </p>
                    </div>
                    <div class="card-footer ">@post.Author</div>
                </a>
            }
        }

    }
</section>


@code {
    Post[] postList;
    Category[] categoryList;

    protected async override Task OnInitializedAsync()
    {
        // fetch categories and posts from database
        postList = await Http.GetFromJsonAsync<Post[]>("api/Post/PostList");
        categoryList = await Http.GetFromJsonAsync<Category[]>("api/Category/CategoryList");
    }

    [Parameter]
    public int informationboardID { get; set; }
    [Parameter]
    public int categoryID { get; set; }
    
}
