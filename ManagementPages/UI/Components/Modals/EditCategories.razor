@using ManagementPages.Functions
@using Syncfusion.Blazor.DropDowns

@inject IDbService _dbService

<ManagementPages.UI.Components.Modals.DeleteCategory @ref="DeleteCategory" OnChangesMade="OnChangesMadeInChildComponent" />

<div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Rediger kategorier - @InformationBoard.InformationBoardModel.Title</h5>
                <button @onclick="() => Close()" type="button" class="close btn btn-secondary" data-dismiss="modal" aria-label="Close">
                    <i class="bi bi-x-lg"></i>
                </button>
            </div>

            <div class="row modal-body">
                <div class="col-3"><label for="title" class="form-label">Rediger titel</label></div>
                <div class="col-1" />
                <div class="col-3"><label class="form-label">Privat/Offentlig</label> <br /></div>
                <div class="col-2"><label for="author" class="form-label">Ikon</label></div>
                <div class="col-2"><label class="form-label">Farve</label> <br /></div>
            </div>

            @foreach (var category in InformationBoard.Categories)
            {
        <div class="row modal-body">
            <div class="col-3">
                <input type="text" class="form-control" id="title" placeholder="" @bind-value="@category.CategoryModel.Title" />
            </div>
            <div class="col-1">
                <button data-dismiss="modal" class="btn btn-danger" @onclick="() => CloseAndOpenDeleteCategory(category)"><i class="bi bi-trash"></i></button>
            </div>
            <div class="col-3">
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" id="flexSwitchCheckChecked" style="height: 30px; width: 55px" checked=@category.CategoryModel.IsPublished @bind-value="category.CategoryModel.IsPublished">
                </div>
            </div>
            <div class="col-2">
                <SfDropDownList CssClass="form-control" ID="icon" TValue="string" Placeholder="Vælg et ikon" TItem="IconOption" @bind-Value="@category.CategoryModel.Icon"
                                DataSource="@Icons">
                    <DropDownListFieldSettings IconCss="BootstrapCode" Value="BootstrapCode" Text="Name"></DropDownListFieldSettings>
                </SfDropDownList>

                <!--Skal de bare default i categorymodel have et ikon?
                    https://stackoverflow.com/questions/36743041/font-awesome-icon-in-select-option/36743356
                    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.6.1/css/font-awesome.min.css" rel="stylesheet" />
                    <select @bind="@category.CategoryModel.Icon">
                        @foreach (var icon in Icons)
                        {
                            <option value="@icon">@iconTest</option>
                        }
                    </select>

                        https://stackoverflow.com/questions/36743041/font-awesome-icon-in-select-option
                            <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.6.1/css/font-awesome.min.css" rel="stylesheet" />
                            <select class="text-muted bi" @bind="@category.CategoryModel.Icon">
                                <option class="bi bi-bug" value="bi bi-bug">bug</option>
                                <option>&#xf044;</option>
                                <option>&#xf045;</option>
                                <option>Hi, &#xf046;</option>
                            </select>
                 -->

            </div>
                    <div class="col-2">
                        <button class="btn btn-primary" disabled>Vælg tema farve</button>
                    </div>
                    <div class="col-1 mx-auto">
                        <button class="btn my-0 py-0"><i class="bi bi-arrow-up-circle" style="font-size: 25px"></i></button>
                        <br />
                        <button class="btn my-0 py-0"><i class="bi bi-arrow-down-circle" style="font-size: 25px"></i></button>
                    </div>
                </div>
            }


            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal" @onclick="() => Close()">Annuller</button>
                <button type="submit" class="btn btn-success" @onclick="() => SaveAndClose()">Gem</button>
            </div>
        </div>
    </div>
</div>


@if (ShowBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}


@code {
    private ManagementPages.UI.Components.Modals.DeleteCategory DeleteCategory { get; set; }

    [Parameter]
    public IInformationBoardViewModel InformationBoard { get; set; }

    [Parameter]
    public EventCallback OnChangesMade { get; set; }

    public string iconTest = "&#xf042;";

    //hvor skal denne ligge? på viewmodel eller?
    public List<IconOption> Icons { get; set; } = new List<IconOption>()
        {
            new IconOption()
            {
                Name = "Insekt",
                BootstrapCode = "bi bi-bug"
            },
            new IconOption()
            {
                Name = "Cykel",
                BootstrapCode = "bi bi-bicycle"
            },
            new IconOption()
            {
                Name = "Træ",
                BootstrapCode = "bi bi-tree"
            }
    };


    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public bool ShowBackdrop = false;


    public void Open()
    {
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        StateHasChanged();
    }

    public void Close()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        StateHasChanged();
    }

    private void CloseAndOpenDeleteCategory(ICategoryViewModel category)
    {
        Close();
        DeleteCategory.Open(category);
    }

    private void SaveAndClose()
    {
        foreach (var category in InformationBoard.Categories)
        {
            category.EditCategory(category.CategoryModel.CategoryId, _dbService);
        }
        Close();
        OnChangesMade.InvokeAsync();
    }

    private void OnChangesMadeInChildComponent()
    {
        // open edit categories modal again after a category has been deleted in the delete category modal
        Open();

        // notify parent about changes, so that the category overview is rerendered
        OnChangesMade.InvokeAsync();
    }
}
