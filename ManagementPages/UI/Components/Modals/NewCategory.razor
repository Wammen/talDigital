@using ManagementPages.Functions 
@using ManagementPages.Model
@using Syncfusion.Blazor.DropDowns

@inject IDbService _dbService

<div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Ny Kategori - @SelectedInformationBoard.InformationBoardModel.Title</h5>
                <button @onclick="() => Close()" type="button" class="close btn btn-secondary" data-dismiss="modal" aria-label="Close">
                    <i class="bi bi-x-lg"></i>
                </button>
            </div>

            <EditForm Model="NewCategoryModelTemp" OnValidSubmit="SaveAndClose">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="col-12 row modal-body">
                    <div class="col-6">
                        <label for="title" class="form-label">Titel</label>
                        <input type="text" class="form-control" id="title" @bind-value="NewCategoryModelTemp.Title">
                    </div>
                    <div class="col-6">
                        <label for="icon" class="form-label">Ikon</label>
                        <SfDropDownList CssClass="form-control" ID="icon" TValue="string" Placeholder="Vælg et ikon" TItem="IconOption" @bind-Value="@NewCategoryModelTemp.Icon"
                                        DataSource="@Icons">
                            <DropDownListFieldSettings IconCss="BootstrapCode" Value="BootstrapCode" Text="Name"></DropDownListFieldSettings>
                        </SfDropDownList>
                    </div>
                    <!--div class="col-6">
                        <!--label class="form-label">Ikon</label-->
                        <!--Skal de bare default i categorymodel have et ikon?-- >
                        <select @bind="@NewCategoryTemp.Icon">
                            @foreach (var icon in Icons)
                            {
                                <option>@icon</option>
                            }
                        </select>
                    </div-->
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal" @onclick="() => Close()">Slet</button>
                    <button type="submit" class="btn btn-secondary" data-dismiss="modal" @onclick="() => IsPublished = false">Gem som kladde</button>
                    <button type="submit" class="btn btn-success" data-dismiss="modal" @onclick="() => IsPublished = true">Gem</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>


@if (ShowBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}


@code {
    [Parameter]
    public EventCallback OnChangesMade { get; set; }

    public bool IsPublished { get; set; }

    public IInformationBoardViewModel SelectedInformationBoard { get; set; } = new InformationBoardViewModel();

    public CategoryModel NewCategoryModelTemp = new CategoryModel();

    //hvor skal den ligge?
    public List<IconOption> Icons { get; set; } = new List<IconOption>()
        {
            new IconOption()
            {
                Name = "Insekt",
                BootstrapCode = "bi bi-bug"
            },
            new IconOption()
            {
                Name = "Cykel",
                BootstrapCode = "bi bi-bicycle"
            },
            new IconOption()
            {
                Name = "Træ",
                BootstrapCode = "bi bi-tree"
            },
            new IconOption()
            {
                Name = "Newspaper",
                BootstrapCode = "bi bi-newspaper"
            },
            new IconOption()
            {
                Name = "Butik",
                BootstrapCode = "bi bi-shop"
            },
            new IconOption()
            {
                Name = "Skilt",
                BootstrapCode = "bi bi-signpost"
            },
            new IconOption()
            {
                Name = "Seværdighed",
                BootstrapCode = "bi bi-command"
            },
            new IconOption()
            {
                Name = "Bold",
                BootstrapCode = "bi bi-dribbble"
            },
            new IconOption()
            {
                Name = "Staffeli",
                BootstrapCode = "bi bi-easel"
            },
            new IconOption()
            {
                Name = "Blomst",
                BootstrapCode = "bi bi-flower1"
            },
            new IconOption()
            {
                Name = "Information",
                BootstrapCode = "bi bi-info"
            },
            new IconOption()
            {
                Name = "Opladning",
                BootstrapCode = "bi bi-lightning-charge"
            },
            new IconOption()
            {
                Name = "Vejkort",
                BootstrapCode = "bi bi-map"
            },
            new IconOption()
            {
                Name = "Telefon",
                BootstrapCode = "bi bi-telephone"
            },
            new IconOption()
            {
                Name = "Wifi",
                BootstrapCode = "bi bi-wifi"
            },
            new IconOption()
            {
                Name = "WC",
                BootstrapCode = "bi bi-badge-wc"
            },
            new IconOption()
            {
                Name = "Shoppingbag",
                BootstrapCode = "bi bi-bag"
            },
            new IconOption()
            {
                Name = "Plaster",
                BootstrapCode = "bi bi-bandaid"
            },
            new IconOption()
            {
                Name = "Bank",
                BootstrapCode = "bi bi-bank"
            },
            new IconOption()
            {
                Name = "Kikkert",
                BootstrapCode = "bi bi-binoculars"
            },
            new IconOption()
            {
                Name = "Musik",
                BootstrapCode = "bi bi-boombox"
            },
            new IconOption()
            {
                Name = "Kalender",
                BootstrapCode = "bi bi-calendar-event"
            },
            new IconOption()
            {
                Name = "Kamera",
                BootstrapCode = "bi bi-camera"
            },
            new IconOption()
            {
                Name = "Penge",
                BootstrapCode = "bi bi-cash-coin"
            },
            new IconOption()
            {
                Name = "Skraldespand",
                BootstrapCode = "bi bi-trash"
            },
            new IconOption()
            {
                Name = "Sky",
                BootstrapCode = "bi bi-cloud"
            }
    };


    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public bool ShowBackdrop = false;

    public void Open(IInformationBoardViewModel selectedInformationBoard)
    {
        SelectedInformationBoard = selectedInformationBoard;
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        StateHasChanged();
    }

    public void Close()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        StateHasChanged();
    }

    public void SaveAndClose()
    {
        Close();

        // add new category to database
        SelectedInformationBoard.AddNewCategory(NewCategoryModelTemp, SelectedInformationBoard.InformationBoardModel.InformationBoardId, IsPublished, _dbService);

        // notify CategoryOverview about changes, so that the list of categories is re-fetched from the database (to give
        // the new category a category ID, and to update the view)
        OnChangesMade.InvokeAsync();

        // reset temporary category object
        NewCategoryModelTemp = new CategoryModel();
    }
}
