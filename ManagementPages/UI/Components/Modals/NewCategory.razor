@using ManagementPages.Functions 
@using ManagementPages.Model
@inject IDbService _dbService

<div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Ny Kategori - Sohngaardsholmparken</h5>
                <button @onclick="() => Close()" type="button" class="close btn btn-secondary" data-dismiss="modal" aria-label="Close">
                    <i class="bi bi-x-lg"></i>
                </button>
            </div>
            <div class="col-12 row modal-body">
                <div class="col-6">
                    <label for="title" class="form-label">Titel</label>
                    <input type="text" class="form-control" id="title" placeholder="" @bind-value="newCategory.Title">
				</div>
                <div class="col-6">
                    <label for="author" class="form-label">Ikon</label>
                    <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                    Dropdown button
                    </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                            <li><a class="dropdown-item" href="#">Action</a></li>
                        </ul>
                    </div>
				</div>              
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal" @onclick="() => Close()">Slet</button>
                <button type="submit" class="btn btn-success" data-dismiss="modal" @onclick="() => AddNewCategory()">Gem</button>
            </div>
        </div>
    </div>
</div>


@if (ShowBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}


@code {
    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public bool ShowBackdrop = false;

    public void Open()
    {
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        StateHasChanged();
    }

    public void SaveAndClose()
    {
        //AddNewCategory();
        Close();
    }

    public List<Category> CategoriesList = new List<Category>();
    public Category newCategory = new Category();

    public async Task AddNewCategory()
    {
        Category cat = new Category
        {
            Title = newCategory.Title,
            InformationBoardId = newCategory.InformationBoardId,
            IsPublished = newCategory.IsPublished
        };

        string sql = @"insert into Category (Title, InformationBoardId, IsPublished)
                values (@Title, @InformationBoardId, @IsPublished);";

        await _dbService.SaveData(sql, cat);

        CategoriesList.Add(cat);

        newCategory = new Category();
        Close();
    }


    public void Close()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        StateHasChanged();
    }
}
