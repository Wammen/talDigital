@using ManagementPages.Functions
@using ManagementPages.Model

@inject IDbService _dbService

<ManagementPages.UI.Components.Modals.EditPost @ref="EditPost" Post="@SelectedPost" OnChangesMade="OnChangesMadeInChildComponent"/>
<ManagementPages.UI.Components.Modals.Delete @ref="Delete" />


<div class="col">
    @if (Category?.Posts?.Count > 0)
    {
        @foreach (var post in Category.Posts)
        {
            <div class="row my-2 border-2 border-bottom">
              <p class="fs-4">@post.PostModel.Title</p>
                <div>
                    @post.PostModel.Text
                    <div class="float-end">
                        <button @onclick="() => EditExistingPost(post)" class="btn ms-1 p-0"><i class="bi bi-pencil"></i></button>
                        <button @onclick="() => Delete.Open()" class="btn p-0"><i class="bi bi-trash"></i></button>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <p>Der er ingen opslag endnu...</p>
    }
</div>

@code {
    [Parameter]
    public ICategoryViewModel Category { get; set; }

    public IPostViewModel SelectedPost { get; set; } = new PostViewModel();

    public void EditExistingPost(IPostViewModel post)
    {
        SelectedPost = post;
        EditPost.Open();
    }

    private ManagementPages.UI.Components.Modals.EditPost EditPost { get; set; }
    private ManagementPages.UI.Components.Modals.Delete Delete { get; set; }

    private void OnChangesMadeInChildComponent()
    {
        StateHasChanged();
    }
}
