@using ManagementPages.Functions
@using ManagementPages.Model
@using ManagementPages.UI.Components.Modals

@inject IDbService _dbService

<NewPost @ref="NewPost" Category="@SelectedInformationBoard.SelectedCategory" OnChangesMade="OnChangesMadeInChildComponent" />
<EditPost @ref="EditPost" Post="@SelectedPost" OnChangesMade="OnChangesMadeInChildComponent" />
<DeletePost @ref="DeletePost" OnChangesMade="OnChangesMadeInChildComponent" />

<div class="col bg-white p-2 rounded">
    <div class="pb-2 border-2 border-bottom">
        @if (SelectedInformationBoard.Categories.Count > 0)
        {
            <button @onclick="() => NewPost.Open()" class="btn btn-primary">
                <i class="bi bi-plus-circle"></i>
                Nyt opslag
            </button>
        }

        <div class="dropdown float-end">
            <button class="btn btn-primary dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                Rediger rækkefølge på opslag
            </button>
            <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                <li><a class="dropdown-item" href="#">Alfabetisk</a></li>
                <li><a class="dropdown-item" href="#">Ældste til nyeste</a></li>
                <li><a class="dropdown-item" href="#">Nyeste til ældste</a></li>
            </ul>
        </div>
    </div>
    @if (SelectedInformationBoard?.SelectedCategory?.Posts?.Count > 0)
    {
        @foreach (var post in SelectedInformationBoard.SelectedCategory.Posts)
        {
            <div class="row my-2 mx-1 border-2 border-bottom">
                <p class="fs-4">@post.PostModel.Title</p>
                <div>
                    @post.PostModel.Text
                    <div class="float-end">
                        <button @onclick="() => EditExistingPost(post)" class="btn ms-1 p-0"><i class="bi bi-pencil"></i></button>
                        <button @onclick="() => DeletePost.Open(post)" class="btn p-0"><i class="bi bi-trash"></i></button>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <p>Der er ingen opslag endnu...</p>
    }
</div>

@code {
    [Parameter]
    public IInformationBoardViewModel SelectedInformationBoard { get; set; }

    [Parameter]
    public EventCallback OnChangesMade { get; set; }

    public IPostViewModel SelectedPost { get; set; } = new PostViewModel();

    public void EditExistingPost(IPostViewModel post)
    {
        SelectedPost = post;
        EditPost.Open();
    }

    private NewPost NewPost { get; set; }
    private EditPost EditPost { get; set; }
    private DeletePost DeletePost { get; set; }

    private async Task OnChangesMadeInChildComponent()
    {
        SelectedInformationBoard.SelectedCategory.Posts = await _dbService.GetPosts(SelectedInformationBoard.SelectedCategory.CategoryModel.CategoryId);
        await OnChangesMade.InvokeAsync();
        StateHasChanged();
    }
}
